---
$schema: http://json-schema.org/draft-04/hyper-schema
title: Album
type: object
definitions:
  album_id:
    description: unique identifier of album
    example: 942b46e5-893b-41ba-88da-d6aef7dddc31
    type: string
    format: uuid
    readOnly: true
  created_at:
    description: when album was created
    type: string
    format: date-time
    readOnly: true
  updated_at:
    description: when album was updated
    type: string
    format: date-time
    readOnly: true
  deleted_at:
    description: when album was deleted
    type: string
    format: date-time
  name:
    description: name of album
    example: my album
    type: string
  private:
    description: whether to be private
    type: boolean
    example: false
  user:
    $ref: "#/definitions/user"
  liked_user_ids:
    description: list of users' id who liked album
    type: array
    items:
      $ref: "#/definitions/user/definitions/user_id"
  tagged_users:
    description: list of users who is tagged in this album
    type: array
    items:
      $ref: "#/definitions/user"
  file:
    description: attachment of album
    example: ... contents of file ...
    type: string
    readOnly: false
properties:
  id:
    $ref: "#/definitions/album/definitions/album_id"
  created_at:
    $ref: "#/definitions/album/definitions/created_at"
  updated_at:
    $ref: "#/definitions/album/definitions/updated_at"
  deleted_at:
    $ref: "#/definitions/album/definitions/deleted_at"
  name:
    $ref: "#/definitions/album/definitions/name"
  private:
    $ref: "#/definitions/album/definitions/private"
  user:
    $ref: "#/definitions/album/definitions/user"
  liked_user_ids:
    $ref: "#/definitions/album/definitions/liked_user_ids"
  tagged_users:
    $ref: "#/definitions/album/definitions/tagged_users"
links:
- title: Create
  description: Create a new album.
  href: "/albums"
  method: POST
  rel: create
  schema:
    type: object
    properties:
      name:
        $ref: "#/definitions/album/definitions/name"
- title: List
  description: List existing albums.
  href: "/albums"
  method: GET
  rel: instances
- title: Read
  description: Read an existing album.
  href: "/albums/{(#/definitions/album/definitions/album_id)}"
  method: GET
  rel: self
- title: Update
  description: Update an existing album.
  href: "/albums/{(#/definitions/album/definitions/album_id)}"
  method: PATCH
  rel: update
  schema:
    type: object
    properties:
      name:
        $ref: "#/definitions/album/definitions/name"
- title: Delete
  description: Delete an existing album.
  href: "/albums/{(#/definitions/album/definitions/album_id)}"
  method: DELETE
  rel: destroy
  mediaType: 'null'
- title: Create
  description: Upload an attachment file for an album.
  method: POST
  href: "/albums/{(#/definitions/album/definitions/album_id)}/files"
  rel: create
  encType: multipart/form-data
  schema:
    type: object
    properties:
      file:
        $ref: "#/definitions/album/definitions/file"
