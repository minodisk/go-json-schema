---
$schema: http://json-schema.org/draft-04/hyper-schema
type:
- object
title: Example API
description: A schema for a small example API.
definitions:
  user:
    $schema: http://json-schema.org/draft-04/hyper-schema
    title: User
    type: object
    definitions:
      id:
        type: integer
        example: 12345
        readOnly: true
      name:
        type: string
        example: Gopher
      email:
        type: string
        format: email
        example: gopher@example.com
    properties:
      id:
        $ref: "#/definitions/user/definitions/id"
      name:
        $ref: "#/definitions/user/definitions/name"
      email:
        $ref: "#/definitions/user/definitions/email"
    links:
      - title: Create
        description: Upload an icon file for user
        method: POST
        href: "/users/{(#/definitions/album/definitions/id)}/icons"
        rel: create
        encType: multipart/form-data
        schema:
          type: object
          properties:
            icon:
              $ref: "#/definitions/album/definitions/icon"
  album:
    $schema: http://json-schema.org/draft-04/hyper-schema
    title: Album
    type: object
    definitions:
      id:
        type: string
        example: exampleuuid0123456789
        format: uuid
        readOnly: true
      filename:
        description: unique name of album
        example: example
        pattern: "^[a-z][a-z0-9-]{3,50}$"
        readOnly: false
        type: string
      private:
        type: boolean
        description: true if this resource is private use
        example: false
      created_at:
        type: date-time
        description: When this resource was deleted at
        example:
      updated_at:
        type: date-time
        description: When this resource was deleted at
        example:
      deleted_at:
        type:
          - date-time
          - "null"
        description: When this resource was deleted at
        example: null
      owner:
        $ref: "#/definitions/user"
      liked_user_ids:
        type: array
        items:
          $ref: "#/definitions/user/definitions/id"
      file:
        type: string
        description: an attachment of album
        example: '... contents of file ...'
        readOnly: false
    links:
      - title: Create
        description: Create a new album.
        href: "/albums"
        method: POST
        rel: create
        schema:
          properties:
            name:
              $ref: "#/definitions/album/definitions/name"
          type:
          - object
      - title: List
        description: List existing albums.
        href: "/albums"
        method: GET
        rel: instances
      - title: Info
        description: Info for existing album.
        href: "/albums/{(#/definitions/album/definitions/id)}"
        method: GET
        rel: self
      - title: Update
        description: Update an existing album.
        href: "/albums/{(#/definitions/album/definitions/id)}"
        method: PATCH
        rel: update
        schema:
          properties:
            name:
              $ref: "#/definitions/album/definitions/name"
          type:
          - object
      - title: Delete
        description: Delete an existing album.
        href: "/albums/{(#/definitions/album/definitions/id)}"
        method: DELETE
        rel: destroy
        mediaType: 'null'
      - title: Create
        description: Upload an attachment file for an album
        method: POST
        href: "/albums/{(#/definitions/album/definitions/id)}/files"
        rel: create
        encType: multipart/form-data
        schema:
          type: object
          properties:
            file:
              $ref: "#/definitions/album/definitions/file"
properties:
  user:
    $ref: "#/definitions/user"
  album:
    $ref: "#/definitions/album"
links:
  - href: https://api.example.com
    rel: self
