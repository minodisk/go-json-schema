// Code generated by jsonschema.
// DO NOT EDIT!

package main

func (a Album) Validate() (errs []error) {
	errs := []error{}
	var validator Validator

	validator = Validator{"Album", "CreatedAt"}

	validator = Validator{"Album", "DeletedAt"}

	validator = Validator{"Album", "ID"}

	validator = Validator{"Album", "LikedUserIds"}

	validator = Validator{"Album", "Name"}

	validator = Validator{"Album", "Private"}

	validator = Validator{"Album", "TaggedUsers"}

	validator = Validator{"Album", "UpdatedAt"}

	validator = Validator{"Album", "User"}

	return errs
}

func (u User) Validate() (errs []error) {
	errs := []error{}
	var validator Validator

	validator = Validator{"User", "Age"}

	if err := validator.MultipleOf(u.Age, 10); err != nil {
		errs = append(errs, err)
	}
	if err := validator.Maximum(u.Age, 60, true); err != nil {
		errs = append(errs, err)
	}
	if err := validator.Minimum(u.Age, 18, false); err != nil {
		errs = append(errs, err)
	}

	validator = Validator{"User", "CreatedAt"}

	validator = Validator{"User", "Email"}

	validator = Validator{"User", "Icon"}

	validator = Validator{"User", "ID"}

	validator = Validator{"User", "Name"}

	if err := validator.Maximum(u.Name, 100, false); err != nil {
		errs = append(errs, err)
	}

	if err := validator.MaxLength(u.Name, 20); err != nil {
		errs = append(errs, err)
	}
	if err := validator.MinLength(u.Name, 4); err != nil {
		errs = append(errs, err)
	}

	validator = Validator{"User", "ScreenName"}

	if err := validator.Pattern(u.ScreenName, "^[a-z0-9-_]{5,30}$"); err != nil {
		errs = append(errs, err)
	}

	validator = Validator{"User", "UpdatedAt"}

	return errs
}
